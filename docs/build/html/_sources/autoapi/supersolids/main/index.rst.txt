:mod:`supersolids.main`
=======================

.. py:module:: supersolids.main

.. autoapi-nested-parse::

   Animation for the numerical solver for the non-linear
   time-dependent Schrodinger equation.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   supersolids.main.simulate_case


.. function:: simulate_case(box: NamedTuple, res: NamedTuple, max_timesteps: int, dt: float, g: float = 0.0, g_qf: float = 0.0, e_dd: float = 1.0, imag_time: bool = False, mu: float = 1.1, E: float = 1.0, psi_0: Callable = functions.psi_gauss_3d, V: Callable = functions.v_harmonic_3d, V_interaction: Callable = None, psi_sol: Callable = functions.thomas_fermi_3d, mu_sol: Callable = functions.mu_3d, plot_psi_sol: bool = False, psi_sol_3d_cut_x: Callable = None, psi_sol_3d_cut_z: Callable = None, plot_V: bool = True, psi_0_noise: Callable = functions.noise_mesh, alpha_psi: float = 0.8, alpha_psi_sol: float = 0.5, alpha_V: float = 0.3, accuracy: float = 10**(-6), filename: str = 'split.mp4', x_lim: Tuple[float, float] = (-1.0, 1.0), y_lim: Tuple[float, float] = (-1.0, 1.0), z_lim: Tuple[float, float] = (-1.0, 1.0), slice_x_index: int = 0, slice_y_index: int = 0, slice_z_index: int = 0, interactive: bool = True, camera_r_func: Callable = None, camera_phi_func: Callable = functools.partial(functions.camera_func_phi, phi_per_frame=20.0), camera_z_func: Callable = None, delete_input: bool = True) -> None

   Wrapper for Animation and Schroedinger to get a working Animation
   of a System through the equations given by Schroedinger.

   Parameters

   box : NamedTuple
       Endpoints of box where to simulate the Schroedinger equation.
       Keyword x0 is minimum in x direction and x1 is maximum.
       Same for y and z. For 1D just use x0, x1.
       For 2D x0, x1, y0, y1.
       For 3D x0, x1, y0, y1, z0, z1.
       Dimension of simulation is constructed from this dictionary.

   res : NamedTuple
       NamedTuple for the number of grid points in x, y, z direction.
       Needs to have half size of box dictionary.
       Keywords x, y z are used.

   max_timesteps : int
       Maximum timesteps  with length dt for the animation.

   accuracy : float
       Convergence is reached when relative error of mu is smaller
       than accuracy, where :math:`\mu = - \log(\psi_{normed}) / (2 dt)`

   plot_psi_sol :
       Condition if :math:`\psi_{sol}` should be plotted.

   plot_V : bool
       Condition if V should be plotted.

   x_lim : Tuple[float, float]
       Limits of plot in x direction

   y_lim : Tuple[float, float]
       Limits of plot in y direction

   z_lim : Tuple[float, float]
       Limits of plot in z direction

   alpha_psi : float
       Alpha value for plot transparency of :math:`\psi`

   alpha_psi_sol : float
       Alpha value for plot transparency of :math:`\psi_sol`

   alpha_V : float
       Alpha value for plot transparency of V

   filename : str
       Filename with filetype to save the movie to

   slice_x_index : int
       Index of grid point in x direction to produce a slice/plane in mayavi,
       where :math:`\psi_{prob} = |\psi|^2` is used for the slice

   slice_y_index : int
       Index of grid point in y direction to produce a slice/plane in mayavi,
       where :math:`\psi_{prob} = |\psi|^2` is used for the slice

   slice_z_index : int
       Index of grid point in z direction to produce a slice/plane in mayavi,
       where :math:`\psi_{prob} = |\psi|^2` is used for the slice

   interactive : bool
       Condition for interactive mode. When camera functions are used,
       then interaction is not possible. So interactive=True turn the usage
       of camera functions off.

   camera_r_func : Callable or None
       r component of the movement of the camera.

   camera_phi_func : Callable or None
       phi component of the movement of the camera.

   camera_z_func : Callable or None
       z component of the movement of the camera.

   delete_input : bool
       Condition if the input pictures should be deleted,
       after creation the creation of the animation as e.g. mp4

   Returns


.. data:: max_workers
   

   

